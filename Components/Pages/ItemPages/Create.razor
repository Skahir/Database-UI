@page "/items/create"
@using Microsoft.EntityFrameworkCore
@using BlazorLearningApp.Models
@inject IDbContextFactory<BlazorLearningApp.Data.BlazorLearningAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Item</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Item" OnValidSubmit="AddItem" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Item.Name" class="form-control" /> 
                <ValidationMessage For="() => Item.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="location" class="form-label">Location:</label> 
                <InputText id="location" @bind-Value="Item.Location" class="form-control" /> 
                <ValidationMessage For="() => Item.Location" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="amount" class="form-label">Amount:</label> 
                <InputNumber id="amount" @bind-Value="Item.Amount" class="form-control" /> 
                <ValidationMessage For="() => Item.Amount" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="kilograms" class="form-label">Kilograms:</label> 
                <InputNumber id="kilograms" @bind-Value="Item.Kilograms" class="form-control" /> 
                <ValidationMessage For="() => Item.Kilograms" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/items">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Item Item { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddItem()
    {
        using var context = DbFactory.CreateDbContext();
        context.Item.Add(Item);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/items");
    }
}
